!function(e,t){for(var r in t)e[r]=t[r]}(this,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t){e.exports=require("firebase-functions")},function(e,t){e.exports=require("firebase-admin")},function(e,t,r){"use strict";r.r(t),r.d(t,"playerCreated",function(){return l}),r.d(t,"challengeCreated",function(){return i});var n=r(0),o=r(1);o.initializeApp(n.config().firebase);const l=n.firestore.document("players/{playerId}").onCreate((e,t)=>{const r=e.data(),n=t.params.playerId,l=o.firestore();return l.runTransaction(e=>(class{static findFreeRoom(e,t,r){const n=e.collection("rooms").where("full","==",!1).where("size","==",r).limit(1);return t.get(n)}}).findFreeRoom(l,e,r.players).then(t=>{var o;if(1===t.size){const r=t.docs[0],l=r.data(),i=[...l.players,n],a={full:i.length===l.size,size:l.size,players:i};e.set(r.ref,a),o=r.id}else{const t=[n],i=l.collection("rooms").doc();console.log(r.players,n,t,i.id),e.set(i,{full:!1,size:r.players,players:t}),o=i.id}e.update(l.collection("players").doc(n),{roomId:o})}))});const i=n.firestore.document("challenges/{challengeId}").onCreate((e,t)=>{const r=t.params.challengeId,n=o.firestore(),l=n.collection("settings").doc("challengesSettings"),i=n.collection("challenges").doc(r);return n.runTransaction(e=>e.get(l).then(t=>{const r=t.data().challengesCount+1;e.update(l,{challengesCount:r}),e.update(i,{challengeNumber:r})}))})}]));